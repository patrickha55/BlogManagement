@using Microsoft.AspNetCore.Identity
@using BlogManagement.Data.Entities
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    var user = new User();
    if (User.Identity.IsAuthenticated)
    {
        user = await UserManager.FindByNameAsync(User.Identity.Name);
    }
}

<ul class="d-flex justify-content-around">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a class="nav-link text-dark d-flex align-items-center" asp-controller="Users" asp-action="Details" asp-route-id="@user.Id">
            <i class="icon-account_box mr-1"></i> Hello @User.Identity.Name
        </a>
    </li>
    <li class="nav-item d-flex align-items-center">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button type="submit" class="nav-link btn btn-link text-dark">
                <i class="icon-sign-out mr-1"></i>Logout
            </button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark d-flex align-items-center" asp-area="Identity" asp-page="/Account/Register">
            <i class="icon-account_box mr-1"></i>Register
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark d-flex align-items-center" asp-area="Identity" asp-page="/Account/Login">
            <i class="icon-sign-in mr-1"></i>Login
        </a>
    </li>
}
</ul>
