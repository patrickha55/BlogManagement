@model Paginated<BlogManagement.Common.Models.CategoryVMs.CategoryVM>

@{
    ViewData["Title"] = "Categories";
    Layout = "Admin/_Layout";
}

@if (Model is null)
{
    @await Html.PartialAsync("User/Partials/_InfoPartial", "category")
}
else
{
    <h1>Categories Overview</h1>

    @if (TempData[Constants.Success] is not null)
    {
        @await Html.PartialAsync("User/Partials/_StatusPartial", TempData[Constants.Success])
    }
    else if (TempData[Constants.Error] is not null)
    {
        @await Html.PartialAsync("User/Partials/_StatusPartial", TempData[Constants.Error])
    }

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title"><a asp-controller="Categories" asp-action="Create" class="btn" style="background-color: #00bfff;">Create New</a></h3>
                </div>
                <!-- /.card-header -->
                <div class="card-body table-responsive p-0">
                    <table class="table table-hover text-nowrap">
                        <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Objects[0].Id)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Objects[0].Title)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Objects[0].ParentCategory)
                            </th>
                            <th></th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var item in Model.Objects)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Id)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Title)
                                </td>
                                <td>
                                    @(item.ParentCategory is null ? "N/A" : item.ParentCategory.Title)
                                </td>
                                <td>
                                    <a asp-controller="Categories" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                                    <a asp-controller="Categories" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                                    <button type="button" class="btn-sm btn-danger deleteBtn" data-id="@item.Id">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
                <div class="card-footer clearfix">
                    <ul class="pagination pagination-sm m-0 float-right">
                        <li class="page-item">
                            <a class="page-link text-light @(Model.HasPrevious ? "" : "d-none")"
                               asp-action="Index" asp-route-pageNumber="@(--Model.CurrentPage)" asp-route-pageSize="@(Model.PageSize)">
                                &laquo;
                            </a>
                        </li>
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item">
                                @if (i != Model.TotalPages)
                                {
                                    <a class="page-link text-light"
                                       asp-action="Index" asp-route-pageNumber="@(++i)" asp-route-pageSize="@(Model.PageSize)">
                                        @i
                                    </a>
                                }
                                else
                                {
                                    <a class="page-link text-light">@i</a>
                                }
                            </li>
                        }
                        <li class="page-item">
                            <a class="page-link text-light @(Model.HasNext ? "" : "d-none")"
                               asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage + 2)" asp-route-pageSize="@(Model.PageSize)">
                                &raquo;
                            </a>
                        </li>
                    </ul>
                </div>
        </div>
            <!-- /.card -->
    </div>
    </div>

    <form id="deleteForm" asp-controller="Categories" asp-action="Delete">
        <input type="hidden" id="categoryId" name="id" />
    </form>

    @section Scripts
    {
    <script>
        $(function() {
            $('.deleteBtn').click(function(e) {
                swal({
                    title: "Are you sure?",
                    text: "Are you sure you want to delete this record?",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true
                }).then((confirm) => {
                    if (confirm) {
                        var btn = $(this);
                        var id = btn.data("id");
                        $('#categoryId').val(id);
                        $('#deleteForm').submit();
                    }
                });
            });
        });
    </script>
    }
}
