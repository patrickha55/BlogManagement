@model Paginated<BlogManagement.Common.Models.PostVMs.PostForIndexVM>

@{
    ViewData["Title"] = "Home Page";
}


<section class="ftco-section ftco-no-pt ftco-no-pb">
    @if (Model is null)
    {
        <partial name="User/_LoaderPartial" />
    }
    else
    {
        @if (TempData[Constants.Success] is not null)
        {
            @await Html.PartialAsync("User/Partials/_StatusPartial", TempData[Constants.Success])
        }
        else if (TempData[Constants.Error] is not null)
        {
            @await Html.PartialAsync("User/Partials/_StatusPartial", TempData[Constants.Error])
        }

        <div class="row d-flex">
            <div class="col-xl-9 py-5 px-md-5">
                <div class="row pt-md-4">
                    @foreach (var post in Model.Objects)
                    {
                        <div class="col-md-12">
                            <div class="blog-entry ftco-animate d-md-flex">
                                <a asp-controller="Posts" asp-action="Details" asp-route-id="@post.Id"
                           class="img img-2" style="background-image: url(https://localhost:44392/@post.ImageUrl);"></a>
                                <div class="text text-2 pl-md-4">
                                    <h3 class="mb-2"><a asp-controller="Posts" asp-action="Details" asp-route-id="@post.Id">@post.Title</a></h3>
                                    <div class="meta-wrap">
                                        <p class="meta">
                                            <span><i class="icon-calendar mr-2"></i>@post.CreatedAt.ToOrdinalWords()</span>
                                            <span>
                                                @if (post.Categories is not null)
                                                {
                                                    @foreach (var catgeory in post.Categories)
                                                    {
                                                        <a asp-controller="" asp-action="">
                                                            <i class="icon-folder-o mr-2"></i>@catgeory.Title
                                                        </a>
                                                    }
                                                }
                                                else
                                                {
                                                    <i class="icon-folder-o mr-2"></i> <span>There is no category</span>
                                                }
                                            </span>
                                            <span class="ml-5 meta">
                                                <span><i class="icon-star pr-2"></i>@Math.Round(post.Rating, 1)</span>
                                                <span><i class="icon-eye pr-2"></i>@post.TotalViewed</span>
                                                <span><i class="icon-comment pr-2"></i>@post.PostComments.Count()</span>
                                            </span>
                                        </p>
                                    </div>
                                    <p class="mb-4">@post.Summary</p>
                                    <p>

                                        <a asp-controller="Posts" asp-action="Details" asp-route-id="@post.Id"
                                   class="btn-custom">
                                            Read More <span class="ion-ios-arrow-forward"></span>
                                        </a>
                                    </p>
                                </div>
                            </div>
                        </div>
                    }
                </div><!-- END-->
            <div class="row">
                    <div class="col text-center">
                        <div class="block-27">
                            <ul>
                                <li class="@(Model.HasPrevious ? "" : "d-none")">
                                    <a asp-controller="Home" asp-action="Index"
                                       asp-route-pageNumber="@(--Model.CurrentPage)" asp-route-pageSize="@Model.PageSize">&lt;</a>
                                </li>
                                @for (var i = 1; i <= Model.TotalPages; i++)
                                {
                                    <li class="@(i == Model.CurrentPage + 1 ? "active" : "")">
                                        <a asp-controller="Home" asp-action="Index"
                                           asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize">
                                            @i
                                        </a>
                                    </li>
                                }
                                <li class="@(Model.HasNext ? "" : "d-none")">
                                    <a asp-controller="Home" asp-action="Index"
                                       asp-route-pageNumber="@(Model.CurrentPage + 2)" asp-route-pageSize="@Model.PageSize">&gt;</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <partial name="AsidePartial" />
        </div>
    }
</section>
